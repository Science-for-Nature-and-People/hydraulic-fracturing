summary(chem.wells.save)
chem.name <- "Chlorine Dioxide"
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "117-81-7"   #Di(2-ethylhexyl) phthalate	117-81-7
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "75-09-2" #Dichloromethane	75-09-2
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
dim(zt)
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "100-41-4" #Ethylbenzene	100-41-4
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name <- "Ethylbenzene"
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
#split up by states because too large of a file
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "7439-92-1" #Lead	7439-92-1
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "7758-19-2" #Sodium chlorite	7758-19-2
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name = SodiumChlorite
chem.name = "SodiumChlorite"
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
states
cas = "100-42-5" #Styrene	100-42-5
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "108-88-3" #Toluene	108-88-3
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name <- 'Toluene'
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
#split up by states because too large of a file
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "1330-20-7" #Xylenes	1330-20-7
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name <- "Xylenes"
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
#write to geojson
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
#split up by states because too large of a file
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "120-82-1" #1,2,4-Trichlorobenzene	120-82-1
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "7440-36-0" #Antimony	7440-36-0
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "7440-39-3" #Barium	7440-39-3
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
cas = "50-32-8" #Benzo(a)pyrene	50-32-8
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "7440-41-7"  #Beryllium	7440-41-7
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "75-27-4" #Bromodichloromethane	75-27-4
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "75-25-2" #Bromoform	75-25-2
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "7440-43-9" #Cadmium
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "124-48-1" #Chlorodibromomethane	124-48-1
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "67-66-3" #Chloroform	67-66-3
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "7440-47-3" #Chromium	7440-47-3
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "57-12-5" #Cyanide	57-12-5
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "16984-48-8" #Fluoride	16984-48-8
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "76-44-8" #Heptachlor	76-44-8
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "1024-57-3" #Heptachlor epoxide	1024-57-3
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
dim(chem.cas)
write.csv(chem.cas, "fracfocuscas.csv"),row.names=FALSE)
write.csv(chem.cas, "M:/public_html/www/NCEAS/data/fracfocus/fracfocuscas.csv"),row.names=FALSE)
write.csv(chem.cas, "M:/public_html/www/NCEAS/data/fracfocus/fracfocuscas.csv",row.names=FALSE)
write.csv(as.data.frame(chem.cas), "M:/public_html/www/NCEAS/data/fracfocus/fracfocuscas.csv",row.names=FALSE)
chem.cas <- unique(chem.up$casnumber)
write.csv(as.data.frame(chem.cas), "M:/public_html/www/NCEAS/data/fracfocus/fracfocuscas.csv",row.names=FALSE)
write.csv(chem.cas, "M:/public_html/www/NCEAS/data/fracfocus/fracfocuscas.csv",row.names=FALSE)
chem.cas <- as.data.frame(unique(chem.up$new.cas))
chem.cas
write.csv(chem.cas, "M:/public_html/www/NCEAS/data/fracfocus/fracfocuscas.csv",row.names=FALSE)
cas = "106-89-8" #Epichlorohydrin	106-89-8
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name = Epichlorohydrin
chem.name = "Epichlorohydrin"
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
#write to geojson
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
#split up by states because too large of a file
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "75-56-9" #1,2-Propylene oxide	75-56-9
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name <- "12-PropyleneOxide"
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
#write to geojson
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
#split up by states because too large of a file
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "123-91-1" #1,4-Dioxane	123-91-1
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name <- "14-Dioxane"
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
#split up by states because too large of a file
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "71-36-3" #1-Butanol	71-36-3
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name <- "1-Butonal"
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
#write to geojson
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
#split up by states because too large of a file
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "75-07-0" #Acetaldehyde	75-07-0
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name <- "Acetaldehyde"
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
#split up by states because too large of a file
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "107-02-8" #Acrolein	107-02-8
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
cas = "62-53-3" #Aniline	62-53-3
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name <- "Aniline"
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
#write to geojson
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
#split up by states because too large of a file
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "100-44-7" #Benzyl chloride	100-44-7
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name = "BenzylChloride"
l
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
#write to geojson
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
#split up by states because too large of a file
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "107-21-1" #Ethylene glycol	107-21-1
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name = "Ethylene glycol"
dim(chem.wells.save)
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
#write to geojson
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
#split up by states because too large of a file
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "75-21-8" #Ethylene oxide	75-21-8
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name = "EthyleneOxide"
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
#write to geojson
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
#split up by states because too large of a file
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
cas = "50-00-0" #Formaldehyde	50-00-0
chem.cas <- chem.up$pkeyregistryupload[which(chem.up$new.cas==cas)]
chem.wells <- well.sp[which(well.sp@data$pkey %in% chem.cas),]; dim(chem.wells)
zt <- subset(chemicals, new.cas==cas)
#set up new dataframe
chem.wells.save <- chem.wells
chem.wells.save@data$casvol <- NA
length(chem.cas)
unique.id <- unique(chem.wells@data$pkey)
for (i in 1:length(unique.id)){
water <- subset(chem.wells, pkey==chem.wells@data$pkey[i])
zt.cas <- subset(zt, pkeyregistryupload==water$pkey)
cas.vol <- round(sum(zt.cas$percenthfjob, na.rm=T)*water$ttlbswt,0)
chem.wells.save@data$casvol[i] <- cas.vol
if((i %% 100)==0){print(i)}
}
summary(chem.wells.save)
chem.name = "Formaldehyde"
chem.wells.save$Mgal = round(chem.wells.save$casvol/1000000,3)
data <- chem.wells.save[,c(5:8)]
writeOGR(data, paste0("All", chem.name, ".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
states <- unique(data$state); length(states)
for (i in 1:length(states)){
zt <- subset(data, state==states[i]); dim(zt);
writeOGR(zt, paste0(states[i],chem.name,".json"), layer="wells", driver="GeoJSON",check_exists=FALSE)
}
purpose <- read.csv(paste0(swd,"dbo_RegistryUploadPurpose.csv"),stringsAsFactors=FALSE, strip.white=TRUE) #trims white spaces
colnames(purpose) <- tolower(colnames(purpose))
colnames(purpose)[which(colnames(purpose)=="pkey")] <- "pkeypurpose"
chem <- merge(chem,purpose,by.x="pkeypurpose",by.y="pkeypurpose",all.x=T)
summary(chem)
purpose <- read.table(paste0(swd,"purpose.csv"), sep=",",header=TRUE,stringsAsFactors=FALSE, strip.white=TRUE)
summary(purpose);
chem.p <- base:::merge(chem, purpose, by.x="purpose", by.y="Purpose", all.x=TRUE)
names(chem)
chem.p <- base:::merge(chem, purpose, by.x="purpose.x", by.y="purpose.y", all.x=TRUE)
names(purpose)
chem.p <- base:::merge(chem, purpose, by.x="purpose.x", by.y="Purpose", all.x=TRUE)
rm(list=ls()) #removes anything stored in memory
well.sp <-  readOGR("C:\\Users\\Lauren Patterson\\Documents\\GIS\\USA","fracfocus_wells")
names(well.sp)
well.sp[1,]
well.sp$Mgal <- round(well.sp$ttlbswt/1000000,3);
well.sp <- subset(well.sp, Mgal>=0.5)
swd.gis <- "C://Users//Lauren Patterson//Documents//NCEAS//Deliverables//Parameters//GIS"
swd <-  "C://Users//Lauren Patterson//Documents//NCEAS//Deliverables//Parameters//RawData//Chemicals//"
